name: CI Smoke

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  smoke:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare /etc/hosts for Traefik hostnames
        run: |
          echo "127.0.0.1 tip.localhost api.tip.localhost" | sudo tee -a /etc/hosts

      - name: Create .env from template (override ports for CI)
        run: |
          cp .env.template .env
          sed -i 's/^WEB_SERVER_PORT=.*/WEB_SERVER_PORT=8081/' .env
          sed -i 's/^NODE_APP_PORT=.*/NODE_APP_PORT=18080/' .env
          # Keep DB/Redis defaults from template

      - name: Build and start core services (with DB)
        run: |
          docker compose version
          docker compose up -d --build db redis reverse-proxy backend-node frontend

      - name: Wait for Postgres (db) to be ready
        run: |
          set -e
          for i in {1..60}; do
            if docker compose exec -T db pg_isready -U ${POSTGRES_USER:-user} -d ${POSTGRES_DB:-tip} -h localhost > /dev/null 2>&1; then
              echo "Postgres is ready"; exit 0; fi; sleep 2; done
          echo "Postgres did not become ready in time"; exit 1

      - name: Wait for backend-node to be healthy
        run: |
          set -e
          for i in {1..40}; do
            if curl -fsS http://api.tip.localhost:8081/health > /dev/null; then
              echo "backend-node is healthy"; exit 0; fi; sleep 3; done
          echo "backend-node did not become healthy in time"; exit 1

      - name: Verify API endpoints
        run: |
          curl -i http://api.tip.localhost:8081/health
          curl -i "http://api.tip.localhost:8081/api/transitions?limit=1" || true

      - name: Verify frontend is reachable and contains expected content
        run: |
          set -e
          # Fetch homepage via Traefik
          body=$(curl -sS http://tip.localhost:8081)
          echo "$body" | head -n 40
          # Basic smoke assertion from Dashboard header
          echo "$body" | grep -q "Transitions Overview"

      - name: Dump logs on failure
        if: failure()
        run: |
          docker compose ps
          docker compose logs --no-color reverse-proxy backend-node frontend | tail -n 300

      - name: Teardown
        if: always()
        run: |
          docker compose down -v
