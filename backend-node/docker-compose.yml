version: '3.8'

services:
  # PostgreSQL Database with pgvector extension
  postgres:
    image: pgvector/pgvector:pg16
    container_name: tip-postgres
    environment:
      POSTGRES_DB: tip
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - tip-network

  # MinIO for file storage
  minio:
    image: minio/minio:latest
    container_name: tip-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - tip-network

  # Keycloak for authentication
  keycloak:
    image: quay.io/keycloak/keycloak:22.0
    container_name: tip-keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak_db
      KC_DB_USERNAME: keycloak_user
      KC_DB_PASSWORD: keycloak_password
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: start-dev
    ports:
      - "8080:8080"
    depends_on:
      - keycloak-db
    networks:
      - tip-network

  # Keycloak Database
  keycloak-db:
    image: postgres:16
    container_name: tip-keycloak-db
    environment:
      POSTGRES_DB: keycloak_db
      POSTGRES_USER: keycloak_user
      POSTGRES_PASSWORD: keycloak_password
    volumes:
      - keycloak_db_data:/var/lib/postgresql/data
    networks:
      - tip-network

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: tip-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - tip-network

  # Elasticsearch for advanced search
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: tip-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - tip-network

  # Backend Node.js Application
  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: tip-backend
    environment:
      DATABASE_URL: "postgresql://better_service:better_service_2024!@postgres:5432/tip?schema=public"
      KEYCLOAK_BASE_URL: "http://keycloak:8080"
      MINIO_ENDPOINT: "minio"
      REDIS_URL: "redis://redis:6379"
      ELASTICSEARCH_URL: "http://elasticsearch:9200"
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - postgres
      - minio
      - keycloak
      - redis
      - elasticsearch
    networks:
      - tip-network
    command: npm run dev

volumes:
  postgres_data:
  keycloak_db_data:
  minio_data:
  redis_data:
  elasticsearch_data:

networks:
  tip-network:
    driver: bridge